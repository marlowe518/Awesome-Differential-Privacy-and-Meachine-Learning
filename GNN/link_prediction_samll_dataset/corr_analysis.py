import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt


def val_test_trend(data_list):
    for data in data_list:
        arr = np.array(data)
        plt.plot(arr[:, 0], label="val")
        plt.plot(arr[:, 1], label="test")
        plt.grid()
        plt.legend(loc="best")
        plt.show()


def main():
    cols = ["dataset",
            "max_node_degree",
            "num_hop",
            "highest_val",
            "final_test",
            "best_epoch",
            "original_edges",
            "sampled_edges",
            "max_term_per_edge",
            "epsilon",
            "sigma",
            "lr",
            "max_norm",
            "batch_size",
            "train_samples"]
    data = pd.read_csv("./results/all_results_20230623140423.csv", header=0, usecols=cols)
    groups = data.groupby("dataset")
    for name, group in groups:
        print(name)
        correlation_matrix = group.corr()
        target_correlation = correlation_matrix["final_test"]
        print(target_correlation)
        sns.heatmap(correlation_matrix, fmt=".2g", linewidths=0, annot=True, cmap='coolwarm')
        plt.title(f"Correlation Matrix {name}")
        plt.show()


if __name__ == "__main__":
    # main()

    raw_data = \
        [(0.5924060460728046, 0.6520038400000001), (0.6526554760594385, 0.67355776), (0.6520559792436512, 0.6980032),
         (0.6900945435961946, 0.7267289599999999), (0.6666797704222029, 0.7268352),
         (0.6477022564667034, 0.7239475200000001), (0.5882193961789448, 0.7246156800000001),
         (0.5674532195927353, 0.71140864), (0.5452521817752968, 0.6752448000000001), (0.45964207091752496, 0.41995904),
         (0.4611260712320151, 0.4555750400000001), (0.45286579133579685, 0.44066688000000004),
         (0.45720477238776625, 0.41914752), (0.4695681657363001, 0.40413824000000004),
         (0.46022191210000785, 0.42091648), (0.4596518987341772, 0.39937407999999996),
         (0.4529788112272977, 0.4998067199999999), (0.47785792908247504, 0.6150425599999999),
         (0.561448423618209, 0.70922752), (0.5743032077993553, 0.8054425600000001),
         (0.5770058573787247, 0.8602636799999999), (0.5618808475509081, 0.88058368), (0.6146267395235475, 0.89205632),
         (0.6837605157638179, 0.89605888), (0.7129589590376602, 0.89746688), (0.7257154650522839, 0.90335744),
         (0.7489385958015568, 0.9095628799999999), (0.7754933563959431, 0.9030169599999999),
         (0.768441897947952, 0.86621824), (0.7219170139161885, 0.8603635199999999), (0.6849349398537621, 0.85948032),
         (0.6361496579919805, 0.80600704), (0.6417613413004167, 0.80622592), (0.6366754461828761, 0.8042764800000001),
         (0.6302333123673246, 0.79379456), (0.6301153785674974, 0.7916595200000001), (0.6285331000864848, 0.792096),
         (0.6103516392798175, 0.77455872), (0.6081747778913437, 0.7710207999999998),
         (0.6294716565767748, 0.7574758399999998), (0.6073443273842283, 0.7366643199999998),
         (0.5912414497995125, 0.72450816), (0.5902537542259612, 0.7202495999999999), (0.5896689991351521, 0.7188992),
         (0.5894331315354981, 0.7092083199999999), (0.6006024451607831, 0.70055424), (0.5893987341772152, 0.68782976),
         (0.587329978771916, 0.68444416), (0.5873201509552637, 0.6883404799999999), (0.5868631574809341, 0.69224832)]
    data_list = [raw_data]
    val_test_trend(data_list)
