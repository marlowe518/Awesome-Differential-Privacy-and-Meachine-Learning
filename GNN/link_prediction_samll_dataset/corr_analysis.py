import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt


def val_test_trend(data_list):
    for data in data_list:
        arr = np.array(data)
        plt.plot(arr[:, 0], label="val")
        plt.plot(arr[:, 1], label="test")
        plt.grid()
        plt.legend(loc="best")
        plt.show()


def main():
    cols = ["dataset",
            "max_node_degree",
            "num_hop",
            "highest_val",
            "final_test",
            "best_epoch",
            "original_edges",
            "sampled_edges",
            "max_term_per_edge",
            "epsilon",
            "sigma",
            "lr",
            "max_norm",
            "batch_size",
            "train_samples"]
    data = pd.read_csv("./results/all_results_20230623140423.csv", header=0, usecols=cols)
    groups = data.groupby("dataset")
    for name, group in groups:
        print(name)
        correlation_matrix = group.corr()
        target_correlation = correlation_matrix["final_test"]
        print(target_correlation)
        sns.heatmap(correlation_matrix, fmt=".2g", linewidths=0, annot=True, cmap='coolwarm')
        plt.title(f"Correlation Matrix {name}")
        plt.show()


if __name__ == "__main__":
    # main()

    raw_data = [(0.5173794801328295, 0.10789840290793223), (0.470849078209092, 0.0916359724468582), (0.28551471430207265, 0.05557856200294442), (0.18446696438795374, 0.06636442398783522), (0.18618172449330128, 0.09401969889575255), (0.2382371464559716, 0.48464769425765275), (0.766311691285927, 0.9415677596228471), (0.814868888125501, 0.9467844586433), (0.815115080728272, 0.9427819571962203), (0.8142104660483225, 0.9319232759278526), (0.7764428031604259, 0.9156908572481476), (0.6484770411084393, 0.8949278228290546), (0.6006154815069277, 0.8685944621981839), (0.5392505439138898, 0.8468296391699812), (0.49845413947097217, 0.8419637755472382), (0.4849851139356464, 0.8390500736102917), (0.44271441658078553, 0.8291948094973096), (0.32428432382915384, 0.7851724118677286), (0.286336310546204, 0.7367515433965706), (0.2973920760334364, 0.705322461468595), (0.3369718309859155, 0.6331250500196357), (0.42519466391847016, 0.49055675809480553), (0.49594354746364355, 0.4807405790924437), (0.616096988434673, 0.4976658278877848), (0.6340833619603803, 0.5144542787959552), (0.633768464445208, 0.5186163777780672), (0.6357866712469941, 0.5235455220561002), (0.6308170159166381, 0.5265685692429959), (0.633115767777396, 0.5322738321462006), (0.6219111416466276, 0.5319015929974371), (0.5300154586052904, 0.5378662600574364), (0.4595786098706057, 0.5443632291001677), (0.39234512767662894, 0.5468004649266969), (0.334758960265659, 0.555900316217157), (0.3943203939081644, 0.5723507274483565), (0.44608668269781293, 0.5794356016966661), (0.5506126188022444, 0.5746902504983351), (0.6099765258215962, 0.5758265104999357), (0.7056338028169015, 0.5916857594330053), (0.8121779457231192, 0.6859974334110692), (0.8105490667582732, 0.6825081566903474), (0.8035869689682812, 0.6652160196840062), (0.7943089430894309, 0.6030395187692285), (0.7568246879651894, 0.3097913785690755), (0.7361731363792511, 0.2894871289008336), (0.7319391961525249, 0.25522530705076785), (0.7303561204626131, 0.24388504138368736), (0.7305822741326004, 0.24551265706165584), (0.7302301614565441, 0.24146897665874423), (0.7296146799496164, 0.24220949991531562)]
    data_list = [raw_data]
    val_test_trend(data_list)
